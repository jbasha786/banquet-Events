@use "@angular/material" as mat;
@import "./app/styles/variable.scss";
@import 'typeface-poppins';

@include mat.core();
$VipsBanquetOffers-primary: mat.define-palette(mat.$indigo-palette);
$VipsBanquetOffers-accent: mat.define-palette(mat.$pink-palette,
    A200,
    A100,
    A400);
$VipsBanquetOffers-warn: mat.define-palette(mat.$red-palette);
$VipsBanquetOffers-theme: mat.define-light-theme((color: (primary: $VipsBanquetOffers-primary,
        accent: $VipsBanquetOffers-accent,
        warn: $VipsBanquetOffers-warn,
      ),
      typography: mat.define-typography-config($font-family: 'Poppins, sans-serif'
      ),
      density: 0,
    ));
@include mat.all-component-themes($VipsBanquetOffers-theme);

html {
  scroll-behavior: smooth;
}

// material theme update
.mat-toolbar.mat-primary {
  --mat-toolbar-container-background-color: #{$secondary-color} !important;
}

.mat-mdc-mini-fab.mat-primary {
  --mdc-fab-small-container-color : #{$secondary-color} !important;
}

.mat-mdc-button.mat-primary {
  --mdc-text-button-label-text-color: #{$secondary-color} !important;
}

body {
  color: $font-clr !important;
  font-family: 'Poppins', sans-serif !important;
}

.cursor {
  cursor: pointer;
}

@for $i from 0 through 500 {

  // Margins
  .m-#{$i} {
    margin: 0px + $i;
  }

  .mt-#{$i} {
    margin-top: 0px + $i;
  }

  .mt-lg-#{$i} {
    @media (min-width: 992px) {
      margin-top: #{$i}px !important;
    }
  }


  .mb-#{$i} {
    margin-bottom: 0px + $i;
  }

  .mb-lg-#{$i} {
    @media (min-width: 992px) {
      margin-bottom: #{$i}px !important;
    }
  }

  .mb-xl-#{$i} {
    @media (min-width: 1536px) {
      margin-bottom: #{$i}rem !important;
    }
  }


  .mbv-#{$i} {
    margin-bottom: 0vw + $i;
  }

  .ml-#{$i} {
    margin-left: 0px + $i;
  }

  .ml-md-#{$i} {
    @media (min-width: 768px) {
      margin-left: #{$i}px;
    }
  }

  .ml-lg-#{$i} {
    @media (min-width: 1280px) {
      margin-left: #{$i}px;
    }
  }

  .mr-#{$i} {
    margin-right: 0px + $i;
  }

  .mr-md-#{$i} {
    @media (min-width: 768px) {
      margin-right: #{$i}px;
    }
  }

  .mr-lg-#{$i} {
    @media (min-width: 1280px) {
      margin-right: #{$i}px;
    }
  }

  // Paddings
  .p-#{$i} {
    padding: 0px + $i !important;
  }

  .p-md-#{$i} {
    @media (min-width: 992px) {
      padding: #{$i}px !important;
    }
  }

  .p-lg-#{$i} {
    @media (min-width: 1280px) {
      padding: #{$i}px !important;
    }
  }

  .pr-#{$i} {
    padding-right: #{$i}px;
  }

  .pr-md-#{$i} {
    @media (min-width: 992px) {
      padding-right: #{$i}px !important;
    }
  }

  .pr-lg-#{$i} {
    @media (min-width: 1280px) {
      padding-right: #{$i}px !important;
    }

    // Paddings
    .pad-#{$i} {
      padding: 0px + $i !important;
    }
  }

  .pl-#{$i} {
    padding-left: #{$i}px;
  }

  .pl-md-#{$i} {
    @media (min-width: 992px) {
      padding-left: #{$i}px !important;
    }
  }

  .pl-lg-#{$i} {
    @media (min-width: 1280px) {
      padding-left: #{$i}px !important;
    }
  }

  .py-#{$i} {
    padding: 0px + $i;
  }

  .pt-#{$i} {
    padding-top: 0px + $i;
  }

  .pb-#{$i} {
    padding-bottom: 0px + $i;
  }

  .pb-md-#{$i} {
    @media (min-width: 992px) {
      padding-bottom: #{$i}px !important;
    }
  }

  .pl-#{$i} {
    padding-left: 0px + $i !important;
  }

  .pr-#{$i} {
    padding-right: 0px + $i !important;
  }

  // gaps
  .gap-#{$i} {
    gap: 0px + $i;
  }

  .gap-lg-#{$i} {
    @media (min-width: 992px) {
      gap: #{$i}px;
    }
  }

  // width
  .w-#{$i} {
    width: 0px + $i;
  }

  .w-sm-#{$i} {
    @media (min-width: 425px) {
      width: #{$i}px;
    }
  }

  .w-lg-#{$i} {
    @media (min-width: 992px) {
      width: #{$i}px;
    }
  }

  .wid-sm-#{$i} {
    @media (min-width: 425px) {
      width: #{$i + '%'};
    }
  }

  .wid-lg-#{$i} {
    @media (min-width: 992px) {
      width: #{$i + '%'} !important;
    }
  }



  // height
  .h-#{$i} {
    height: 0px + $i;
  }

  .h-lg-#{$i} {
    @media (min-width: 992px) {
      height: #{$i}px;
    }
  }

  .h-xl-#{$i} {
    @media (min-width: 1440px) {
      height: #{$i}px;
    }
  }

  // line-height
  .lh-#{$i} {
    line-height: #{$i}px;
  }

  .lh-md-#{$i} {
    @media (min-width: 992px) {
      line-height: #{$i}px !important;
    }
  }

  // FontSizes
  // SCSS Loop for Font Sizes

  .fs-#{$i} {
    font-size: #{$i}px;
  }

  .fs-md-#{$i} {
    @media (min-width: 768px) {
      font-size: #{$i}px !important;
    }
  }

  .fs-lg-#{$i} {
    @media (min-width: 992px) {
      font-size: #{$i}px !important;
    }
  }

  // font weight
  // Font weight classes

  .fw-#{$i} {
    font-weight: #{$i};
  }

  .fw-lg-#{$i} {
    @media (min-width: 992px) {
      font-weight: #{$i} !important;
    }
  }

  .gx-#{$i} {
    --bs-gutter-x: #{$i}rem;
  }

  .gx-lg-#{$i} {
    @media (min-width: 992px) {
      --bs-gutter-x: #{$i}rem !important;
    }
  }

  // FontSizes in vw
  .fv-#{$i} {
    font-size: 0vw + $i;
  }

}

//letterspacing

.ls-tight {
  letter-spacing: -0.05em;
}

.ls-normal {
  letter-spacing: normal;
}

.ls-wide {
  letter-spacing: 0.05em;
}

.ls-wider {
  letter-spacing: 0.1em;
}

.ls-widest {
  letter-spacing: 0.2em;
}


html {
  height: 100%;
}

.cdk-global-overlay-wrapper {
  top: gutter-sp(105);
}

::ng-deep .mat-form-field-underline {
  border-bottom: gutter-sp(1) solid transparent;
}

.fixed-dialog {

  transform: translate(gutter-per(0), gutter-per(-17));
  position: fixed;
  z-index: 1050;
  overflow: scroll;
  scrollbar-width: none;
}

.fixed-dialog .mat-mdc-dialog-container .mdc-dialog__surface {
  overflow: hidden;
}


.shape-dialog-wrapper {
  .mat-mdc-dialog-container .mdc-dialog__surface {
    scrollbar-width: none;
  }
}


.timePartLocation {
  position: absolute !important;
  top: gutter-sp(10);

  .mat-mdc-dialog-container .mdc-dialog__surface {
    border-radius: gutter-sp(12);
    scrollbar-width: none;
  }
}

.custom-dialog-panel,
.custom-dialog-success-panel {
  .mat-mdc-dialog-container .mdc-dialog__surface {
    box-shadow: none;
  }
}

.page_content {
  padding: gutter-vw(2) gutter-vw(9) gutter-vw(6) gutter-vw(10.4);
}

.accommodation {
  .mat-mdc-form-field-icon-prefix {
    opacity: gutter-per(40);
  }

  .custom_date {
    .mat-date-range-input-container {
      font-size: gutter-sp(14);
    }

    .mat-date-range-input-separator {
      opacity: gutter-per(45);
    }
  }
}

.custom-dialog-backdrop {
  background-color: $dialogue-backclr;
  z-index: 2;
}

.custom-dialog-panel {
  border-radius: gutter-sp(24);
  background: white;
  padding: gutter-sp(16);
  box-shadow: gutter-sp(0) gutter-sp(4) gutter-sp(8) $dialogue-box-shadow;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: fixed !important;
  top: gutter-per(50);
  left: gutter-per(50);
  transform: translate(gutter-per(-50), gutter-per(-50));
}

.custom-dialog-success-panel {
  border-radius: gutter-sp(12);
  background: white;
  border: 1px solid $dialogue-border;
  padding: gutter-sp(32);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: fixed !important;
  top: gutter-per(50);
  left: gutter-per(50);
  transform: translate(gutter-per(-50), gutter-per(-50));
}

.custom-dialog-success-backdrop {
  background-color: $dialogue-lightclr;
  z-index: 2;
}

::ng-deep .cdk-overlay-pane {
  z-index: 1050 !important;
  /* Ensure overlay is above .fixed-top */

}

.custom-dialog-panel,
.custom-dialog-success-panel {
  .mat-mdc-dialog-container .mdc-dialog__surface {
    box-shadow: none;
  }
}

.custom-dialog-backdrop {
  background-color: $dialogue-backclr;
  z-index: 2;
}

.custom-dialog-panel {
  border-radius: gutter-sp(24);
  background: white;
  padding: gutter-sp(16);
  box-shadow: gutter-sp(0) gutter-sp(4) gutter-sp(8) $dialogue-box-shadow;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: fixed !important;
  top: gutter-per(50);
  left: gutter-per(50);
  transform: translate(gutter-per(-50), gutter-per(-50));
}

.custom-dialog-success-panel {
  border-radius: gutter-sp(12);
  background: white;
  border: 1px solid $dialogue-border;
  padding: gutter-sp(32);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: fixed !important;
  top: gutter-per(50);
  left: gutter-per(50);
  transform: translate(gutter-per(-50), gutter-per(-50));
}

.custom-dialog-success-backdrop {
  background-color: $dialogue-lightclr;
  z-index: 2;
}

.invoive-view {
  transform: translate(gutter-per(0), gutter-per(-15));
  position: relative;
}


.mat-calendar-body-selected {
  background-color: $primary-color !important;
  color: $white;
}

.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {
  border: none;
  background-color: $secondary-color !important;
  color: $white;
}

.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {
  background-color: $active-list-bg-clr !important;
}

.mat-calendar-body-in-range::before {
  background: $light-silver !important;
}

.mat-calendar-body-selected.mat-calendar-body-today {
  box-shadow: none !important;
}

.timepicker-dial__control:focus {
  background-color: transparent !important;
}

//mat-checkbox
.mdc-checkbox .mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background {
  border-color: $secondary-color !important;
  background-color: $secondary-color !important;
  height: gutter-sp(15);
  width: gutter-sp(15);
}

.mdc-checkbox__background {
  height: gutter-sp(15) !important;
  width: gutter-sp(15) !important;
}

.mdc-checkbox .mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background {
  border-color: $secondary-color !important;
  background-color: $secondary-color !important;
}

.mdc-checkbox__ripple {
  display: none !important;
}

//hover-change
.card {
  &-button {
    border: none;
    background-color: transparent;
    color: $secondary-color;
    cursor: pointer;
    animation: readmore 0.5s;
    display: inline-flex;
    align-items: center;
  }

  //hover-change
  &-button .arrow {
    opacity: 0;
    transform: translateX(0);
    transition: opacity 0.3s ease, transform 0.3s ease;
    margin-left: gutter-sp(5);
  }

  //hover-change
  &-button:hover .arrow {
    opacity: 1;
    transform: translateX(gutter-sp(8));
  }
}

// Base styles for buttons
.btn-base {
  padding: gutter-sp(10) gutter-sp(22);
  border-radius: gutter-sp(6);
  border: gutter-sp(1) solid $secondary-color;
  position: relative;
  color: $secondary-color;
  background-color: transparent;
  transition: color 0.3s ease, transform 0.3s ease;


  &::after {
    content: "";
    position: absolute;
    top: $value-null;
    left: $value-null;
    width: gutter-per(100);
    height: gutter-per(100);
    background-color: $secondary-color;
    transition: transform 0.3s ease;
    transform: scaleX(0);
    transform-origin: left;
    z-index: -1;
    border-radius: gutter-sp(4);
  }


  &:hover,
  &:focus {
    color: $white;

    transform: translateX(gutter-sp(0));

    &::after {
      transform: scaleX(1);
    }
  }
}


.border__btn {
  @extend .btn-base;
}

//image  hover
.image__item {
  border-radius: gutter-sp(14);
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.image__item:hover {
  box-shadow: $value-null gutter-sp(5) gutter-sp(15) $chat-overlay;
  border-radius: gutter-sp(14);
  transform: translateY(gutter-sp(-5));
}

//backgroundbtn
// Base styles for .memberbtn
.memberbtn {
  background: $secondary-color;
  color: $white;
  border-radius: gutter-sp(8);
  border: gutter-sp(1) solid transparent;
  padding: gutter-sp(10) gutter-sp(20);

}

.memberbtn:hover {
  background-color: transparent;
  color: $secondary-color;
  border: gutter-sp(1) solid $secondary-color;
}


//input select focus
input::-ms-reveal,
input::-ms-clear {
  display: none ;
}

input.form-control:focus,
textarea.form-control:focus,
select.form-control:focus {
  outline: none;
  box-shadow: none;
  border-color: $secondary-color;
}

.form-control.custom_input,
.form-control.custom_select {
  border: gutter-sp(1) solid $event-input-border-clr;
  box-shadow: none;
  font-size: gutter-sp(14);
  height: gutter-sp(50);
  border-radius: gutter-sp(6);
}

.form-control.custom_input:focus,
.form-control.custom_select:focus {
  outline: none;
  box-shadow: none;
  border-color: $secondary-color;
}
//scroll design
::-webkit-scrollbar-track {
  background-color: $white;
  border-radius: gutter-sp(10);
}



::-webkit-scrollbar {
  width: gutter-sp(10);
  height: gutter-sp(10);
  background-color: transparent;
}


::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, $primary-color gutter-per(0), $secondary-color gutter-per(100));
  border-radius: gutter-sp(10);
  border: gutter-sp(2) solid $white; 
}


::-webkit-scrollbar-thumb:hover {
  background: darken($secondary-color, gutter-per(10));
}


* {
  scrollbar-color: $secondary-color $white;
  scrollbar-width: thin;
}


@media screen and (max-width: 375px) {
  ngx-mat-timepicker-face .clock-face {
    width: 220px !important;
    height: 220px !important;
  }

  ngx-mat-timepicker-face .clock-face__number--outer {
    height: gutter-sp(100) !important;
  }

  ngx-mat-timepicker-face .clock-face__number {
    top: calc(gutter-per(50) - gutter-sp(100)) !important;
  }

  ngx-mat-timepicker-face .clock-face__clock-hand_minute>button {
    top: gutter-sp(-15) !important;
  }

  ngx-mat-timepicker-face .clock-face__clock-hand {
    height: gutter-sp(85) !important;
    top: calc(gutter-per(50) - gutter-sp(85)) !important;
  }
}

